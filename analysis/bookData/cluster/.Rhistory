rect.hclust(bray, k = 6, border = 4:10)
rect.hclust(clust, k = 6, border = 4:10)
x <- rect.hclust(clust, k = 6, border = 4:10)
#Produce a dendrogram and add a line at height one, in this case
plot(brayAgnes, which.plots = 2, main='', cex=0.7)
rect.hclust(clust, k = 6, border = 4:10)
rect.hclust(brayAgnes, k = 6, border = 4:10)
rect.hclust(brayAgnes, k = 4, border = 6:10)
#Produce a dendrogram and add a line at height one, in this case
plot(brayAgnes, which.plots = 2, main='', cex=0.7)
rect.hclust(brayAgnes, k = 4, border = 6:10)
#Produce a dendrogram and add a line at height one, in this case
plot(brayAgnes, which.plots = 2, main='', cex=0.7)
rect.hclust(brayAgnes, k = 4, border = 2:5)
x<-rect.hclust(brayAgnes, h=1, which = c(2,7),border = 2:5)
x<-rect.hclust(brayAgnes, h=1 ,border = 2:5)
x
#Produce a dendrogram and add a line at height one, in this case
plot(brayAgnes, which.plots = 2, main='', cex=0.7)
rect.hclust(brayAgnes, k = 4, border = 2:5) #can't get this to work
library(vegan)
# The density calc removes lfls with no vol (like Central1). So you can't use the percent file and density file together.
catdens <- read.csv("~/GitHub/seattle-littlefreelibrary/code/bookData/bray-curtis/cat-density-collection.csv", encoding="UTF-8")
#get rid of spaces in neighborhood names
catdens$neighborhood<-str_replace_all(catdens$neighborhood, c(" " = "."))
library(stringr)
#get rid of spaces in neighborhood names
catdens$neighborhood<-str_replace_all(catdens$neighborhood, c(" " = "."))
citation("vegan")
citation("stringr")
citation("dplyr")
library(vegan)
library(stringr)
# The density calc removes lfls with no vol (like Central1). So you can't use the percent file and density file together.
catdens <- read.csv("~/GitHub/seattle-littlefreelibrary/code/bookData/bray-curtis/cat-density-collection.csv", encoding="UTF-8")
#get rid of spaces in neighborhood names
catdens$neighborhood<-str_replace_all(catdens$neighborhood, c(" " = "."))
#check variance of columns
library(dplyr)
catdens %>% summarise_if(is.numeric, var)
#Convert the densities to percentages of the max density in each LFL. This reduces the influence of one category
#with a wide range in percent. Now all categories will range from zero to 1.
catdensper <- catdens[,3:28] #col 2 to 28
catdensper <- decostand(catdensper, method='total')
#http://strata.uga.edu/8370/lecturenotes/clusterAnalysis.html
library(cluster)
rownames(catdensper) <- catdens$lflname #rename rows
bray <- vegdist(catdensper)
brayAgnes <- agnes(bray, diss = TRUE, method='ward') #other options: average (default), single (min), complete (max) and others...
setEPS()
postscript("cluster.eps")
plot(brayAgnes, which.plots = 2, main='', cex=0.7)
abline(h=1, col='red') #Chose h=1 arbitrarily
dev.off()
setEPS()
postscript("../../figures/cluster.eps")
plot(brayAgnes, which.plots = 2, main='', cex=0.7)
abline(h=1, col='red') #Chose h=1 arbitrarily
dev.off()
pltree(brayAgnes, cex = 0.6, hang = -1, main = "Dendrogram of diana")
library(factoextra)
plot(brayAgnes, which.plots = 2, main='', cex=0.7)
rect.hclust(hc5, k = 4, border = 2:5)
rect.hclust(brayAgnes, k = 4, border = 2:5)
plot(brayAgnes, which.plots = 2, main='', cex=0.7)
rect.hclust(brayAgnes, k = 4, border = 3:6)
setEPS()
postscript("../../figures/cluster.eps")
library(factoextra)
plot(brayAgnes, which.plots = 2, main='', cex=0.7)
rect.hclust(brayAgnes, k = 4, border = 3:6)
dev.off()
#boxes are not at right height. Need another library
library(dendextend)
citation('dendextend')
citation(factoextra)
citation('factoextra')
dend <- brayAgnes %>% as.dendrogram %>% hang.dendrogram
par(mar = c(15,2,1,1))
dend %>% color_branches(k=3) %>% color_labels(k=3) %>% plot
dend %>% rect.dendrogram(k=3)
dend %>% color_branches(k=4) %>% color_labels(k=4) %>% plot
dend %>% rect.dendrogram(k=4)
dend %>% color_branches(k=4) %>% plot
dend %>% rect.dendrogram(k=4)
par(mar = c(10,1,1,1)) #control the margins (bottom, left, top, right)
dend %>% color_branches(k=4) %>% plot
dend %>% rect.dendrogram(k=4)
par(mar = c(10,0,1,0)) #control the margins (bottom, left, top, right)
dend %>% color_branches(k=4) %>% plot
dend %>% rect.dendrogram(k=4)
par(mar = c(10,2,1,0)) #control the margins (bottom, left, top, right)
dend %>% color_branches(k=4) %>% plot
dend %>% rect.dendrogram(k=4)
dend <- brayAgnes %>% as.dendrogram %>% hang.dendrogram
par(mar = c(10,2,1,0)) #control the margins (bottom, left, top, right)
par(cex=2)
dend %>% color_branches(k=4) %>% plot
par(cex=0.7)
dend %>% color_branches(k=4) %>% plot
dend %>% rect.dendrogram(k=4)
par(cex=0.6) #Text size of lables
dend %>% color_branches(k=4) %>% plot
dend %>% rect.dendrogram(k=4)
par(mar = c(15,2,1,1)) #control the margins (bottom, left, top, right)
par(cex=0.6) #Text size of lables
dend %>% color_branches(k=4) %>% plot
dend %>% rect.dendrogram(k=4)
dend <- brayAgnes %>% as.dendrogram %>% hang.dendrogram
par(mar = c(15,2,1,1)) #control the margins (bottom, left, top, right)
par(cex=0.6) #Text size of labels
dend %>% color_branches(k=4) %>% plot
dend %>% rect.dendrogram(k=4)
par(mar = c(20,2,1,1)) #control the margins (bottom, left, top, right)
par(cex=0.6) #Text size of labels
dend %>% color_branches(k=4) %>% plot
dend %>% rect.dendrogram(k=4)
dend %>% plot #If you want colors on the branches: dend %>% color_branches(k=4) %>% plot
dend %>% rect.dendrogram(k=4)
par(mar = c(17,2,1,1)) #control the margins (bottom, left, top, right)
par(cex=0.6) #Text size of labels
dend %>% plot #If you want colors on the branches: dend %>% color_branches(k=4) %>% plot
dend %>% rect.dendrogram(k=4)
dend <- brayAgnes %>% as.dendrogram %>% hang.dendrogram
par(mar = c(15,2,1,1)) #control the margins (bottom, left, top, right)
par(cex=0.6) #Text size of labels
dend %>% plot #If you want colors on the branches: dend %>% color_branches(k=4) %>% plot
dend %>% rect.dendrogram(k=4)
dend <- brayAgnes %>% as.dendrogram %>% hang.dendrogram
par(mar = c(15,2,1,1)) #control the margins (bottom, left, top, right)
par(cex=0.6) #Text size of labels
setEPS()
postscript("../../figures/cluster.eps")
dend %>% plot #If you want colors on the branches: dend %>% color_branches(k=4) %>% plot
dend %>% rect.dendrogram(k=4)
dev.off()
dend <- brayAgnes %>% as.dendrogram %>% hang.dendrogram
par(mar = c(12,2,1,1)) #control the margins (bottom, left, top, right)
par(cex=0.6) #Text size of labels
dend %>% plot #If you want colors on the branches: dend %>% color_branches(k=4) %>% plot
dend %>% rect.dendrogram(k=4)
dend <- brayAgnes %>% as.dendrogram %>% hang.dendrogram
par(mar = c(10,2,1,1)) #control the margins (bottom, left, top, right)
par(cex=0.6) #Text size of labels
dend %>% plot #If you want colors on the branches: dend %>% color_branches(k=4) %>% plot
dend %>% rect.dendrogram(k=4)
plot(brayAgnes, which.plots = 2, main='', cex=0.7)
rect.hclust(brayAgnes, k = 4, border = 3:6)
setEPS()
postscript("../../figures/cluster.eps")
plot(brayAgnes, which.plots = 2, main='', cex=0.7)
rect.hclust(brayAgnes, k = 4, border = 3:6)
dev.off()
dend <- brayAgnes %>% as.dendrogram %>% hang.dendrogram
par(mar = c(10,2,1,1)) #control the margins (bottom, left, top, right)
par(cex=0.6) #Text size of labels
dend %>% plot #If you want colors on the branches: dend %>% color_branches(k=4) %>% plot
dend %>% rect.dendrogram(k=4)
dend <- brayAgnes %>% as.dendrogram %>% hang.dendrogram
par(mar = c(15,2,1,1)) #control the margins (bottom, left, top, right)
par(cex=0.6) #Text size of labels
dend %>% plot #If you want colors on the branches: dend %>% color_branches(k=4) %>% plot
dend %>% rect.dendrogram(k=4)
dend <- brayAgnes %>% as.dendrogram %>% hang.dendrogram
par(mar = c(18,2,1,1)) #control the margins (bottom, left, top, right)
par(cex=0.6) #Text size of labels
dend %>% plot #If you want colors on the branches: dend %>% color_branches(k=4) %>% plot
dend %>% rect.dendrogram(k=4)
dend <- brayAgnes %>% as.dendrogram %>% hang.dendrogram
par(mar = c(10,2,1,1)) #control the margins (bottom, left, top, right)
par(cex=0.6) #Text size of labels
dend %>% plot #If you want colors on the branches: dend %>% color_branches(k=4) %>% plot
dend %>% rect.dendrogram(k=4)
setEPS()
postscript("../../figures/cluster.eps")
dend %>% plot #If you want colors on the branches: dend %>% color_branches(k=4) %>% plot
dend %>% rect.dendrogram(k=4)
dev.off()
dend <- brayAgnes %>% as.dendrogram %>% hang.dendrogram
par(mar = c(10,2,1,1)) #control the margins (bottom, left, top, right)
par(oma = c(10,1,1,1)) #control the margins (bottom, left, top, right)
par(cex=0.6) #Text size of labels
dend %>% plot #If you want colors on the branches: dend %>% color_branches(k=4) %>% plot
dend %>% rect.dendrogram(k=4)
par(oma = c(1,1,1,1)) #control the margins (bottom, left, top, right)
par(cex=0.6) #Text size of labels
dend %>% plot #If you want colors on the branches: dend %>% color_branches(k=4) %>% plot
dend %>% rect.dendrogram(k=4)
par(oma = c(5,1,1,1)) #control the margins (bottom, left, top, right)
par(cex=0.6) #Text size of labels
dend %>% plot #If you want colors on the branches: dend %>% color_branches(k=4) %>% plot
par(oma = c(1,1,10,1)) #control the margins (bottom, left, top, right)
par(cex=0.6) #Text size of labels
dend %>% plot #If you want colors on the branches: dend %>% color_branches(k=4) %>% plot
dend %>% rect.dendrogram(k=4)
par(oma = c(3,1,1,1)) #control the margins (bottom, left, top, right)
par(cex=0.6) #Text size of labels
dend %>% plot #If you want colors on the branches: dend %>% color_branches(k=4) %>% plot
dend %>% rect.dendrogram(k=4)
library(vegan)
library(stringr)
# The density calc removes lfls with no vol (like Central1). So you can't use the percent file and density file together.
catdens <- read.csv("~/GitHub/seattle-littlefreelibrary/code/bookData/bray-curtis/cat-density-collection.csv", encoding="UTF-8")
# The density calc removes lfls with no vol (like Central1). So you can't use the percent file and density file together.
catdens <- read.csv("~/GitHub/seattle-littlefreelibrary/code/bookData/cluster/cat-density-collection.csv", encoding="UTF-8")
#get rid of spaces in neighborhood names
catdens$neighborhood<-str_replace_all(catdens$neighborhood, c(" " = "."))
#check variance of columns
library(dplyr)
catdens %>% summarise_if(is.numeric, var)
#Convert the densities to percentages of the max density in each LFL. This reduces the influence of one category
#with a wide range in percent. Now all categories will range from zero to 1.
catdensper <- catdens[,3:28] #col 2 to 28
catdensper <- decostand(catdensper, method='total')
#http://strata.uga.edu/8370/lecturenotes/clusterAnalysis.html
library(cluster)
rownames(catdensper) <- catdens$lflname #rename rows
bray <- vegdist(catdensper)
brayAgnes <- agnes(bray, diss = TRUE, method='ward') #other options: average (default), single (min), complete (max) and others...
#Produce a simple dendrogram and add a line (use pltree to put all labels on x axis)
plot(brayAgnes, which.plots = 2, main='', cex=0.7)
abline(h=1, col='red') #Chose h=1 arbitrarily
#plot a dendrogram with boxes around clusters
library(dendextend)
dend <- brayAgnes %>% as.dendrogram %>% hang.dendrogram
par(mar = c(10,2,1,1)) #control the margins (bottom, left, top, right)
par(oma = c(3,1,1,1)) #control the margins (bottom, left, top, right)
par(cex=0.6) #Text size of labels
dend %>% plot #If you want colors on the branches: dend %>% color_branches(k=4) %>% plot
dend %>% rect.dendrogram(k=4)
setEPS()
postscript("../../figures/cluster.eps")
dend %>% plot #If you want colors on the branches: dend %>% color_branches(k=4) %>% plot
dend %>% rect.dendrogram(k=4)
dev.off()
cluster1 <- brayAgnes$order [which(brayAgnes$order.lab=='CentralDistrict2') : which(brayAgnes$order.lab=='Montlake6')]
cluster2 <- brayAgnes$order [which(brayAgnes$order.lab=='CentralDistrict5') : which(brayAgnes$order.lab=='Montlake2')]
cluster3 <- brayAgnes$order [which(brayAgnes$order.lab=='CentralDistrict3') : which(brayAgnes$order.lab=='Laurelhurst3')]
cluster4 <- brayAgnes$order [which(brayAgnes$order.lab=='Laurelhurst1') : which(brayAgnes$order.lab=='Northgate4')]
catdenstrimmed<-catdens[,3:28]
cluster1lfl <- catdenstrimmed[cluster1, ]
cluster2lfl <- catdenstrimmed[cluster2, ]
cluster3lfl <- catdenstrimmed[cluster3, ]
cluster4lfl <- catdenstrimmed[cluster4, ]
cluster5lfl <- catdenstrimmed[cluster5, ]
cluster6lfl <- catdenstrimmed[cluster6, ]
round(sort(colSums(cluster1lfl) / sum(colSums(cluster1lfl)), decreasing=TRUE), digits=2)
round(sort(colSums(cluster2lfl) / sum(colSums(cluster2lfl)), decreasing=TRUE), digits=2) #Cookery
round(sort(colSums(cluster3lfl) / sum(colSums(cluster3lfl)), decreasing=TRUE), digits=2) #Childrens
#Look at subclusters in cluster3
cluster5 <- brayAgnes$order [which(brayAgnes$order.lab=='CentralDistrict3') : which(brayAgnes$order.lab=='QueenAnne2')]
cluster6 <- brayAgnes$order [which(brayAgnes$order.lab=='CentralDistrict4') : which(brayAgnes$order.lab=='Laurelhurst3')]
round(sort(colSums(cluster4lfl) / sum(colSums(cluster4lfl)), decreasing=TRUE), digits=2) #Mystery and Novels
round(sort(colSums(cluster5lfl) / sum(colSums(cluster5lfl)), decreasing=TRUE), digits=2) #Children's and Novels
round(sort(colSums(cluster6lfl) / sum(colSums(cluster6lfl)), decreasing=TRUE), digits=2) #Children's and SciFi
#From: https://www.r-bloggers.com/2017/12/how-to-perform-hierarchical-clustering-using-r/
clust <- cutree(as.hclust(brayAgnes), h=0.75) #This gets the output from agnes into the right form for cutree.
#Use factoextra to create an ordination plot
library(factoextra)
fviz_cluster(list(data = bray, cluster = clust))
library(vegan)
library(stringr)
# The density calc removes lfls with no vol (like Central1). So you can't use the percent file and density file together.
catdens <- read.csv("~/GitHub/seattle-littlefreelibrary/analysis/bookData/cluster/cat-density-collection.csv", encoding="UTF-8")
#get rid of spaces in neighborhood names
catdens$neighborhood<-str_replace_all(catdens$neighborhood, c(" " = "."))
#check variance of columns
library(dplyr)
catdens %>% summarise_if(is.numeric, var)
library(cluster)
rownames(catdensper) <- catdens$lflname #rename rows
bray <- vegdist(catdensper)
brayAgnes <- agnes(bray, diss = TRUE, method='ward') #other options: average (default), single (min), complete (max) and others...
#plot a dendrogram with boxes around clusters
library(dendextend)
dend <- brayAgnes %>% as.dendrogram %>% hang.dendrogram
par(mar = c(10,2,1,1)) #control the margins (bottom, left, top, right)
par(oma = c(3,1,1,1)) #control the margins (bottom, left, top, right)
par(cex=0.6) #Text size of labels
dend %>% plot #If you want colors on the branches: dend %>% color_branches(k=4) %>% plot
dend %>% rect.dendrogram(k=4)
library(vegan)
library(stringr)
# The density calc removes lfls with no vol (like Central1). So you can't use the percent file and density file together.
catdens <- read.csv("~/GitHub/seattle-littlefreelibrary/analysis/bookData/cluster/cat-density-collection.csv", encoding="UTF-8")
#get rid of spaces in neighborhood names
catdens$neighborhood<-str_replace_all(catdens$neighborhood, c(" " = "."))
#check variance of columns
library(dplyr)
catdens %>% summarise_if(is.numeric, var)
#Convert the densities to percentages of the max density in each LFL. This reduces the influence of one category
#with a wide range in percent. Now all categories will range from zero to 1.
catdensper <- catdens[,3:28] #col 2 to 28
View(catdens)
View(catdensper)
#Convert the densities to percentages of the max density in each LFL. This reduces the influence of one category
#with a wide range in percent. Now all categories will range from zero to 1.
catdensper <- catdens[,3:45] #col 2 to 28
View(catdensper)
#http://strata.uga.edu/8370/lecturenotes/clusterAnalysis.html
library(cluster)
rownames(catdensper) <- catdens$lflname #rename rows
bray <- vegdist(catdensper)
brayAgnes <- agnes(bray, diss = TRUE, method='ward') #other options: average (default), single (min), complete (max) and others...
#Produce a simple dendrogram and add a line (use pltree to put all labels on x axis)
plot(brayAgnes, which.plots = 2, main='', cex=0.7)
abline(h=1, col='red') #Chose h=1 arbitrarily
#plot a dendrogram with boxes around clusters
library(dendextend)
dend <- brayAgnes %>% as.dendrogram %>% hang.dendrogram
par(mar = c(10,2,1,1)) #control the margins (bottom, left, top, right)
par(oma = c(3,1,1,1)) #control the margins (bottom, left, top, right)
par(cex=0.6) #Text size of labels
dend %>% plot #If you want colors on the branches: dend %>% color_branches(k=4) %>% plot
dend %>% rect.dendrogram(k=4)
#---------------------------
#Look at what is driving the clustering: This ranks the genres for each cluster.
#Get row numbers for bounding lfls
cluster1 <- brayAgnes$order [which(brayAgnes$order.lab=='CentralDistrict3') : which(brayAgnes$order.lab=='Northgate2')]
cluster2 <- brayAgnes$order [which(brayAgnes$order.lab=='Northgate3') : which(brayAgnes$order.lab=='Laurelhurst3')]
cluster3 <- brayAgnes$order [which(brayAgnes$order.lab=='Phinny-Green2') : which(brayAgnes$order.lab=='Montlake6')]
cluster4 <- brayAgnes$order [which(brayAgnes$order.lab=='CentralDistrict5') : which(brayAgnes$order.lab=='Laurelhurst6')]
catdenstrimmed<-catdens[,3:45]
cluster1lfl <- catdenstrimmed[cluster1, ]
cluster2lfl <- catdenstrimmed[cluster2, ]
cluster3lfl <- catdenstrimmed[cluster3, ]
cluster4lfl <- catdenstrimmed[cluster4, ]
round(sort(colSums(cluster1lfl) / sum(colSums(cluster1lfl)), decreasing=TRUE), digits=2) #Novels
round(sort(colSums(cluster2lfl) / sum(colSums(cluster2lfl)), decreasing=TRUE), digits=2) #Cookery
round(sort(colSums(cluster2lfl) / sum(colSums(cluster2lfl)), decreasing=TRUE), digits=2) #Childrens and Scifi/fan
round(sort(colSums(cluster3lfl) / sum(colSums(cluster3lfl)), decreasing=TRUE), digits=2) #Childrens
round(sort(colSums(cluster4lfl) / sum(colSums(cluster4lfl)), decreasing=TRUE), digits=2) #Mystery and Novels
#Look at super cluster
cluster5 <- brayAgnes$order [which(brayAgnes$order.lab=='Phinny-Green2') : which(brayAgnes$order.lab=='Laurelhurst6')]
cluster4 <- brayAgnes$order [which(brayAgnes$order.lab=='CentralDistrict5') : which(brayAgnes$order.lab=='Laurelhurst6')]
#Look at super cluster
cluster5 <- brayAgnes$order [which(brayAgnes$order.lab=='Phinny-Green2') : which(brayAgnes$order.lab=='Laurelhurst6')]
#Look at super cluster
cluster5 <- brayAgnes$order [which(brayAgnes$order.lab=='Phinny-Green2') : which(brayAgnes$order.lab=='ColumbiaCity1')]
#Look at super cluster
cluster5 <- brayAgnes$order [which(brayAgnes$order.lab=='Phinny-Green2') : which(brayAgnes$order.lab=='Montlake6')]
cluster3 <- brayAgnes$order [which(brayAgnes$order.lab=='Phinny-Green2') : which(brayAgnes$order.lab=='Laurelhurst6')]
cluster3 <- brayAgnes$order [which(brayAgnes$order.lab=='Phinny-Green2') : which(brayAgnes$order.lab=='Montlake6')]
#---------------------------
#Look at what is driving the clustering: This ranks the genres for each cluster.
#Get row numbers for bounding lfls
cluster1 <- brayAgnes$order [which(brayAgnes$order.lab=='CentralDistrict3') : which(brayAgnes$order.lab=='Northgate2')]
cluster2 <- brayAgnes$order [which(brayAgnes$order.lab=='Northgate3') : which(brayAgnes$order.lab=='Laurelhurst3')]
#Look at super cluster
cluster5 <- brayAgnes$order [which(brayAgnes$order.lab=='Phinny-Green2') : which(brayAgnes$order.lab=='Laurelhurst6')]
cluster3 <- brayAgnes$order [which(brayAgnes$order.lab=='Phinny-Green2') : which(brayAgnes$order.lab=='Montlake6')]
#Look at super cluster
cluster5 <- brayAgnes$order [which(brayAgnes$order.lab=='Phinney-Green2') : which(brayAgnes$order.lab=='Laurelhurst6')]
cluster3 <- brayAgnes$order [which(brayAgnes$order.lab=='Phinney-Green2') : which(brayAgnes$order.lab=='Montlake6')]
cluster4 <- brayAgnes$order [which(brayAgnes$order.lab=='CentralDistrict5') : which(brayAgnes$order.lab=='Laurelhurst6')]
cluster5lfl <- catdenstrimmed[cluster5, ]
round(sort(colSums(cluster5lfl) / sum(colSums(cluster5lfl)), decreasing=TRUE), digits=2) #Children's and Novels
#Look at super clusters
cluster5 <- brayAgnes$order [which(brayAgnes$order.lab=='CentralDistrict3') : which(brayAgnes$order.lab=='Laurelhurst3')]
cluster6 <- brayAgnes$order [which(brayAgnes$order.lab=='Phinney-Green2') : which(brayAgnes$order.lab=='Laurelhurst6')]
catdenstrimmed<-catdens[,3:45]
cluster5lfl <- catdenstrimmed[cluster5, ]
cluster6lfl <- catdenstrimmed[cluster6, ]
round(sort(colSums(cluster5lfl) / sum(colSums(cluster5lfl)), decreasing=TRUE), digits=2) #Mystery
round(sort(colSums(cluster6lfl) / sum(colSums(cluster6lfl)), decreasing=TRUE), digits=2) #Children's and Novels
#Create an ordination chart
#From: https://www.r-bloggers.com/2017/12/how-to-perform-hierarchical-clustering-using-r/
clust <- cutree(as.hclust(brayAgnes), h=0.75) #This gets the output from agnes into the right form for cutree.
#Use factoextra to create an ordination plot
library(factoextra)
fviz_cluster(list(data = bray, cluster = clust))
#Create an ordination chart
#From: https://www.r-bloggers.com/2017/12/how-to-perform-hierarchical-clustering-using-r/
clust <- cutree(as.hclust(brayAgnes), h=1) #This gets the output from agnes into the right form for cutree.
fviz_cluster(list(data = bray, cluster = clust))
#Create an ordination chart
#From: https://www.r-bloggers.com/2017/12/how-to-perform-hierarchical-clustering-using-r/
clust <- cutree(as.hclust(brayAgnes), h=1.3) #This gets the output from agnes into the right form for cutree.
fviz_cluster(list(data = bray, cluster = clust))
#Build the plot and save as eps
setEPS()
postscript("../../figures/cluster.eps")
dend %>% plot #If you want colors on the branches: dend %>% color_branches(k=4) %>% plot
dend %>% rect.dendrogram(k=4)
dev.off()
library(vegan)
library(stringr)
library(vegan)
library(stringr)
# The density calc removes lfls with no vol (like Central1). So you can't use the percent file and density file together.
catdens <- read.csv("~/GitHub/seattle-littlefreelibrary/analysis/bookData/cluster/cat-density-collection.csv", encoding="UTF-8")
#get rid of spaces in neighborhood names
catdens$neighborhood<-str_replace_all(catdens$neighborhood, c(" " = "."))
#check variance of columns
library(dplyr)
catdens %>% summarise_if(is.numeric, var)
#Convert the densities to percentages of the max density in each LFL. This reduces the influence of one category
#with a wide range in percent. Now all categories will range from zero to 1.
catdensper <- catdens[,3:45] #col 2 to 28
catdensper <- decostand(catdensper, method='total')
#http://strata.uga.edu/8370/lecturenotes/clusterAnalysis.html
library(cluster)
rownames(catdensper) <- catdens$lflname #rename rows
bray <- vegdist(catdensper)
brayAgnes <- agnes(bray, diss = TRUE, method='ward') #other options: average (default), single (min), complete (max) and others...
#Produce a simple dendrogram and add a line (use pltree to put all labels on x axis)
plot(brayAgnes, which.plots = 2, main='', cex=0.7)
#plot a dendrogram with boxes around clusters
library(dendextend)
dend <- brayAgnes %>% as.dendrogram %>% hang.dendrogram
par(mar = c(10,2,1,1)) #control the margins (bottom, left, top, right)
par(oma = c(3,1,1,1)) #control the margins (bottom, left, top, right)
par(cex=0.6) #Text size of labels
dend %>% plot #If you want colors on the branches: dend %>% color_branches(k=4) %>% plot
dend %>% rect.dendrogram(k=4)
#---------------------------
#Look at what is driving the clustering: This ranks the genres for each cluster.
#Get row numbers for bounding lfls
cluster1 <- brayAgnes$order [which(brayAgnes$order.lab=='Phinney-Green2') : which(brayAgnes$order.lab=='Northgate4')]
cluster2 <- brayAgnes$order [which(brayAgnes$order.lab=='Laurelhurst4') : which(brayAgnes$order.lab=='Laurelhurst5')]
cluster3 <- brayAgnes$order [which(brayAgnes$order.lab=='Phinney-Green3') : which(brayAgnes$order.lab=='Ravenna5')]
cluster4 <- brayAgnes$order [which(brayAgnes$order.lab=='CentralDistrict3') : which(brayAgnes$order.lab=='QueenAnne1')]
#Look at super clusters
cluster5 <- brayAgnes$order [which(brayAgnes$order.lab=='Phinney-Green2') : which(brayAgnes$order.lab=='Laurelhurst5')] #First group
cluster6 <- brayAgnes$order [which(brayAgnes$order.lab=='Phinney-Green3') : which(brayAgnes$order.lab=='QueenAnne1')] #second group
catdenstrimmed<-catdens[,3:45]
cluster1lfl <- catdenstrimmed[cluster1, ]
cluster2lfl <- catdenstrimmed[cluster2, ]
cluster3lfl <- catdenstrimmed[cluster3, ]
cluster4lfl <- catdenstrimmed[cluster4, ]
cluster5lfl <- catdenstrimmed[cluster5, ]
round(sort(colSums(cluster1lfl) / sum(colSums(cluster1lfl)), decreasing=TRUE), digits=2) #Childrens and mystery
round(sort(colSums(cluster2lfl) / sum(colSums(cluster2lfl)), decreasing=TRUE), digits=2) #Childrens and Scifi/fan
round(sort(colSums(cluster3lfl) / sum(colSums(cluster3lfl)), decreasing=TRUE), digits=2) #Childrens and mystery more even
round(sort(colSums(cluster4lfl) / sum(colSums(cluster4lfl)), decreasing=TRUE), digits=2) #Cooking and self help/health
round(sort(colSums(cluster5lfl) / sum(colSums(cluster5lfl)), decreasing=TRUE), digits=2) #Childrens
round(sort(colSums(cluster6lfl) / sum(colSums(cluster6lfl)), decreasing=TRUE), digits=2) #Mystery
View(catdens)
View(catdensper)
View(catdens)
#Convert the densities to percentages of the max density in each LFL. This reduces the influence of one category
#with a wide range in percent. Now all categories will range from zero to 1.
catdensper <- catdens[,3:34] #get the columns of categories
catdensper <- decostand(catdensper, method='total')
rownames(catdensper) <- catdens$lflname #rename rows
bray <- vegdist(catdensper)
brayAgnes <- agnes(bray, diss = TRUE, method='ward') #other options: average (default), single (min), complete (max) and others...
#Produce a simple dendrogram and add a line (use pltree to put all labels on x axis)
plot(brayAgnes, which.plots = 2, main='', cex=0.7)
View(catdensper)
dend <- brayAgnes %>% as.dendrogram %>% hang.dendrogram
par(mar = c(10,2,1,1)) #control the margins (bottom, left, top, right)
par(oma = c(3,1,1,1)) #control the margins (bottom, left, top, right)
par(cex=0.6) #Text size of labels
dend %>% plot #If you want colors on the branches: dend %>% color_branches(k=4) %>% plot
dend %>% rect.dendrogram(k=4)
# The density calc removes lfls with no vol (like Central1). So you can't use the percent file and density file together.
catdens <- read.csv("~/GitHub/seattle-littlefreelibrary/analysis/bookData/cluster/cat-density-collection.csv", encoding="UTF-8")
#get rid of spaces in neighborhood names
catdens$neighborhood<-str_replace_all(catdens$neighborhood, c(" " = "."))
catdens %>% summarise_if(is.numeric, var)
#Convert the densities to percentages of the max density in each LFL. This reduces the influence of one category
#with a wide range in percent. Now all categories will range from zero to 1.
catdensper <- catdens[,3:34] #get the columns of categories
catdensper <- decostand(catdensper, method='total')
rownames(catdensper) <- catdens$lflname #rename rows
bray <- vegdist(catdensper)
brayAgnes <- agnes(bray, diss = TRUE, method='ward') #other options: average (default), single (min), complete (max) and others...
#Produce a simple dendrogram and add a line (use pltree to put all labels on x axis)
plot(brayAgnes, which.plots = 2, main='', cex=0.7)
dend <- brayAgnes %>% as.dendrogram %>% hang.dendrogram
par(mar = c(10,2,1,1)) #control the margins (bottom, left, top, right)
par(oma = c(3,1,1,1)) #control the margins (bottom, left, top, right)
par(cex=0.6) #Text size of labels
dend %>% plot #If you want colors on the branches: dend %>% color_branches(k=4) %>% plot
dend %>% rect.dendrogram(k=2)
#Build the plot and save as eps
setEPS()
postscript("../../figures/cluster.eps")
dend %>% plot #If you want colors on the branches: dend %>% color_branches(k=4) %>% plot
dend %>% rect.dendrogram(k=4)
dev.off()
#---------------------------
#Look at what is driving the clustering: This ranks the genres for each cluster.
#Get row numbers for bounding lfls
cluster1 <- brayAgnes$order [which(brayAgnes$order.lab=='Phinney-Green2') : which(brayAgnes$order.lab=='ColumbiaCity5')]
cluster2 <- brayAgnes$order [which(brayAgnes$order.lab=='Phinney-Green4') : which(brayAgnes$order.lab=='Ravenna3')]
#small cluster within cluster 1
cluster3 <- brayAgnes$order [which(brayAgnes$order.lab=='CentralDistrict5') : which(brayAgnes$order.lab=='ColumbiaCity5')]
#left cluster in cluster 2
cluster4 <- brayAgnes$order [which(brayAgnes$order.lab=='Phinney-Green4') : which(brayAgnes$order.lab=='Ravenna4')]
#right cluster in cluster 2
cluster5 <- brayAgnes$order [which(brayAgnes$order.lab=='Phinney-Green3') : which(brayAgnes$order.lab=='Ravenna3')] #First group
catdenstrimmed<-catdens[,3:34]
cluster1lfl <- catdenstrimmed[cluster1, ]
cluster2lfl <- catdenstrimmed[cluster2, ]
cluster3lfl <- catdenstrimmed[cluster3, ]
cluster4lfl <- catdenstrimmed[cluster4, ]
cluster5lfl <- catdenstrimmed[cluster5, ]
cluster6lfl <- catdenstrimmed[cluster6, ]
#Generally, categories over 0.10 are noted
round(sort(colSums(cluster1lfl) / sum(colSums(cluster1lfl)), decreasing=TRUE), digits=2) #Childrens and mystery
round(sort(colSums(cluster2lfl) / sum(colSums(cluster2lfl)), decreasing=TRUE), digits=2) #Childrens and Scifi/fan
round(sort(colSums(cluster3lfl) / sum(colSums(cluster3lfl)), decreasing=TRUE), digits=2) #Mystery, Self help, Romance cooking
round(sort(colSums(cluster4lfl) / sum(colSums(cluster4lfl)), decreasing=TRUE), digits=2) #
round(sort(colSums(cluster5lfl) / sum(colSums(cluster5lfl)), decreasing=TRUE), digits=2) #Childrens then mystery
#Create an ordination chart
#From: https://www.r-bloggers.com/2017/12/how-to-perform-hierarchical-clustering-using-r/
clust <- cutree(as.hclust(brayAgnes), h=1.3) #This gets the output from agnes into the right form for cutree.
#Use factoextra to create an ordination plot
library(factoextra)
fviz_cluster(list(data = bray, cluster = clust))
